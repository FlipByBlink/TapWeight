import SwiftUI

struct ðŸ—¯ResultView: View {
    @EnvironmentObject var ðŸ“±: ðŸ“±AppModel
    @State private var â“¢howUndoAlert: Bool = false
    private var â“’anceled: Bool { ðŸ“±.ðŸš©completedCancellation }
    var body: some View {
        VStack {
            Spacer()
            Image(systemName: "checkmark")
                .font(.largeTitle.bold())
            Text("DONE!")
                .font(.title.bold())
            Spacer()
            Text(ðŸ“±.â“¡esultSummaryDescription)
                .font(.body.bold())
                .lineLimit(2)
                .multilineTextAlignment(.center)
            Spacer()
        }
        .minimumScaleFactor(0.1)
        .padding(.horizontal)
        .strikethrough(self.â“’anceled)
        .opacity(self.â“’anceled ? 0.25 : 1)
        .overlay(alignment: .bottom) {
            if self.â“’anceled {
                Text("Canceled")
                    .fontWeight(.semibold)
            }
        }
        .onTapGesture {
            if !self.â“’anceled { self.â“¢howUndoAlert = true }
        }
        .confirmationDialog("Undo?", isPresented: self.$â“¢howUndoAlert) {
            Button("Yes, undo") { ðŸ“±.ðŸ—‘cancel() }
        }
        .modifier(ðŸš¨CancellationErrorAlert())
        .toolbar(.hidden, for: .automatic)
    }
    //Dismiss by pushing DigitalCrown
}
