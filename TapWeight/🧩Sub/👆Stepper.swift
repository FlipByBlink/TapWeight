import SwiftUI

struct ðŸ‘†BodyMassStepper: View {
    @EnvironmentObject var ðŸ“±: ðŸ“±AppModel
    private var ðŸ” font: Font { ðŸ“±.ðŸš©ableDatePicker ? .largeTitle : .system(size: 50) }
    private var ðŸª§description: String {
        if let â“¥alue = ðŸ“±.â“œassInputValue {
            return ðŸ“±.ðŸš©amount50g ? String(format: "%.2f", â“¥alue) : â“¥alue.description
        } else {
            return ðŸ“±.ðŸš©amount50g ? "00.00" : "00.0"
        }
    }
    private var â“ŸreviousSampleIsNothing: Bool { ðŸ“±.ðŸ“¦latestSamples[.bodyMass] == nil }
    var body: some View {
        Stepper {
            HStack {
                HStack(alignment: .firstTextBaseline) {
                    Text(self.ðŸª§description)
                        .font(self.ðŸ” font)
                        .fontWeight(.black)
                        .monospacedDigit()
                        .opacity(self.â“ŸreviousSampleIsNothing ? 0.2 : 1)
                        .animation(.default, value: self.â“ŸreviousSampleIsNothing)
                    Text(ðŸ“±.ðŸ“¦units[.bodyMass]?.description ?? "nil")
                        .font(.title2.weight(.black))
                        .frame(maxHeight: 36)
                }
                Spacer(minLength: 4)
                ðŸ“‰DifferenceView(.bodyMass)
            }
        } onIncrement: {
            UISelectionFeedbackGenerator().selectionChanged()
            ðŸ“±.incrementMassStepper()
        } onDecrement: {
            UISelectionFeedbackGenerator().selectionChanged()
            ðŸ“±.decrementMassStepper()
        }
        .padding(8)
        .padding(.vertical, 4)
    }
}

struct ðŸ‘†BodyFatStepper: View {
    @EnvironmentObject var ðŸ“±: ðŸ“±AppModel
    private var ðŸ” font: Font { ðŸ“±.ðŸš©ableDatePicker ? .largeTitle : .system(size: 50) }
    private var ðŸª§description: String {
        if let â“¥alue = ðŸ“±.â“‘odyFatInputValue {
            return (round(â“¥alue * 1000) / 10).description
        } else {
            return "00.0"
        }
    }
    private var â“ŸreviousSampleIsNothing: Bool { ðŸ“±.ðŸ“¦latestSamples[.bodyFatPercentage] == nil }
    var body: some View {
        Section {
            Stepper {
                HStack {
                    HStack(alignment: .firstTextBaseline, spacing: 6) {
                        Text(self.ðŸª§description)
                            .font(self.ðŸ” font)
                            .fontWeight(.black)
                            .monospacedDigit()
                            .opacity(self.â“ŸreviousSampleIsNothing ? 0.2 : 1)
                            .animation(.default, value: self.â“ŸreviousSampleIsNothing)
                        Text("%")
                            .font(.title2.weight(.black))
                            .frame(maxHeight: 54)
                    }
                    Spacer(minLength: 0)
                    ðŸ“‰DifferenceView(.bodyFatPercentage)
                }
            } onIncrement: {
                UISelectionFeedbackGenerator().selectionChanged()
                ðŸ“±.incrementBodyFatStepper()
            } onDecrement: {
                UISelectionFeedbackGenerator().selectionChanged()
                ðŸ“±.decrementBodyFatStepper()
            }
            .padding(8)
            .padding(.vertical, 4)
        } header: {
            Text("Body Fat Percentage")
        }
    }
}
